"""add password column to landlords

Revision ID: e028c291e455
Revises: 9062b63176a0
Create Date: 2025-10-09 16:31:24.621035

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e028c291e455'
down_revision: Union[str, Sequence[str], None] = '9062b63176a0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('landlords', sa.Column('password', sa.String(), nullable=False))
    op.add_column('maintenance_requests', sa.Column('updated_at', sa.DateTime(), nullable=False))
    op.alter_column('maintenance_requests', 'description',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=False)
    op.alter_column('maintenance_requests', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.create_index(op.f('ix_maintenance_requests_tenant_id'), 'maintenance_requests', ['tenant_id'], unique=False)
    op.create_index(op.f('ix_maintenance_requests_unit_id'), 'maintenance_requests', ['unit_id'], unique=False)
    op.add_column('payments', sa.Column('status', sa.Enum('pending', 'paid', 'overdue', name='paymentstatus'), nullable=True))
    op.add_column('payments', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.drop_column('payments', 'date')
    op.drop_column('payments', 'description')
    op.add_column('properties', sa.Column('property_code', sa.String(), nullable=False))
    op.create_index(op.f('ix_properties_property_code'), 'properties', ['property_code'], unique=True)
    op.drop_constraint(op.f('properties_landlord_id_fkey'), 'properties', type_='foreignkey')
    op.create_foreign_key(None, 'properties', 'landlords', ['landlord_id'], ['id'], ondelete='CASCADE')
    op.add_column('property_managers', sa.Column('password', sa.String(), nullable=False))
    op.add_column('service_charges', sa.Column('description', sa.String(), nullable=False))
    op.add_column('service_charges', sa.Column('due_date', sa.DateTime(), nullable=False))
    op.add_column('service_charges', sa.Column('status', sa.Enum('unpaid', 'paid', 'overdue', name='chargestatus'), nullable=True))
    op.add_column('service_charges', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.drop_column('service_charges', 'date')
    op.drop_column('service_charges', 'service_type')
    op.add_column('tenants', sa.Column('property_id', sa.Integer(), nullable=False))
    op.add_column('tenants', sa.Column('unit_id', sa.Integer(), nullable=False))
    op.add_column('tenants', sa.Column('password', sa.String(), nullable=True))
    op.create_foreign_key(None, 'tenants', 'properties', ['property_id'], ['id'])
    op.create_foreign_key(None, 'tenants', 'units', ['unit_id'], ['id'])
    op.add_column('units', sa.Column('occupied', sa.Integer(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('units', 'occupied')
    op.drop_constraint(None, 'tenants', type_='foreignkey')
    op.drop_constraint(None, 'tenants', type_='foreignkey')
    op.drop_column('tenants', 'password')
    op.drop_column('tenants', 'unit_id')
    op.drop_column('tenants', 'property_id')
    op.add_column('service_charges', sa.Column('service_type', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('service_charges', sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_column('service_charges', 'created_at')
    op.drop_column('service_charges', 'status')
    op.drop_column('service_charges', 'due_date')
    op.drop_column('service_charges', 'description')
    op.drop_column('property_managers', 'password')
    op.drop_constraint(None, 'properties', type_='foreignkey')
    op.create_foreign_key(op.f('properties_landlord_id_fkey'), 'properties', 'landlords', ['landlord_id'], ['id'])
    op.drop_index(op.f('ix_properties_property_code'), table_name='properties')
    op.drop_column('properties', 'property_code')
    op.add_column('payments', sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('payments', sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_column('payments', 'created_at')
    op.drop_column('payments', 'status')
    op.drop_index(op.f('ix_maintenance_requests_unit_id'), table_name='maintenance_requests')
    op.drop_index(op.f('ix_maintenance_requests_tenant_id'), table_name='maintenance_requests')
    op.alter_column('maintenance_requests', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('maintenance_requests', 'description',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.drop_column('maintenance_requests', 'updated_at')
    op.drop_column('landlords', 'password')
    # ### end Alembic commands ###
