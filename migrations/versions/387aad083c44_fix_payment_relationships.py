"""fix payment relationships

Revision ID: 387aad083c44
Revises: 1b14747a5306
Create Date: 2025-09-12 13:53:41.770889

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '387aad083c44'
down_revision: Union[str, Sequence[str], None] = '1b14747a5306'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('maintenance_requests', 'tenant_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('maintenance_requests', 'unit_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('maintenance_requests', 'status_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('maintenance_requests', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.create_unique_constraint(None, 'maintenance_status', ['name'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'maintenance_status', type_='unique')
    op.alter_column('maintenance_requests', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('maintenance_requests', 'status_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('maintenance_requests', 'unit_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('maintenance_requests', 'tenant_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    # ### end Alembic commands ###
